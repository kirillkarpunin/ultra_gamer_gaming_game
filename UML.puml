@startuml
'https://plantuml.com/class-diagram

interface IObservable {
    +virtual void add_observer(IObserver* observer) = 0;

    +virtual void notify() = 0;
    +virtual ~IObservable() = default;
}

interface IObserver {
    +virtual void update(IObservable* observable_element) = 0;
}

class Menu{
    #std::vector<option> options;
    #int curr_option;
    #bool active;
    #IObserver* observer;
    #friend Renderer;
    +Menu();
    +~Menu();

    +virtual void create_options() = 0;

    +void option_up();
    +void option_down();
    +menu_options choose_option() const;
    +bool is_active() const;
    +void close();

    +void add_observer(IObserver* observer_) override;
    +void notify() override;
}

class DefeatMenu{
    +void create_options() override;
}

class MainMenu{
    +void create_options() override;
}

class PauseMenu{
    +void create_options() override;
}

class SettingsMenu{
    + void create_options() override;
}

class VictoryMenu{
    + void create_options() override;
}

class Updater{
    -Renderer* renderer;
    -std::queue<IObservable*> update_q;

    +Updater();
    +~Updater();

    +void update_game_frame(Playground* playground, PlayerManager* player_manager);
    +void update_menu_frame(Menu* menu);

    +void update(IObservable* observable_element) override;
    +void check_updates();
}

class PlayerManager{
}


class Playground{
}

top to bottom direction


IObserver <|.. Updater
Menu o-- IObserver
IObservable <|.. Menu
Menu <|-- PauseMenu
Menu <|-- MainMenu
Menu <|-- DefeatMenu
Menu <|-- SettingsMenu
Menu <|-- VictoryMenu
PlayerManager ..|> IObservable
Playground ..|> IObservable

class Renderer {
    +Renderer();
    +~Renderer();

    +void terminal_clear();
    +void print_player_info(PlayerManager& player_manager);
    +void render_map(Playground& playground, PlayerManager& player_manager);
    +void print_menu(Menu& menu);
}

Renderer <.. Menu
Renderer <.. PlayerManager
Renderer <.. Playground


@enduml