@startuml
'https://plantuml.com/class-diagram


class Game {
    - Player* player;
    - PlayerManager* player_manager;
    - Playground* playground;
    - MapGenerator* map_generator;

    - Renderer* renderer;
    - Printer* printer;

    - Config* config;

    - std::pair<int, int> playground_size;
    - bool saved_progress;
    - bool game_is_running;
    - int level;

    -void create_new_level();
    -void pause_menu();
    -void victory_menu();
    -void defeat_menu();
    -void settings_menu();
    -void game_loop();
    -void new_size();

    + Game();
    + void main_menu();
    +~Game();
}


enum menu_options{
 play_game
 settings
 exit_game
 return_main_menu
 resume
 next_level
 new_game
 change_size
 }

 class Menu {
     -std::vector<option> options;
     -int curr_option;
     -bool active;

     +Menu(std::vector<option> options_);
     +~Menu();

     +void option_up();
     +void option_down();

     +int get_curr_option() const;
     +std::vector<option>& get_options();

     +menu_options choose_option() const;

     +bool is_active() const;
     +void close();

 }

 class Renderer {

     +Renderer();
     +~Renderer();

     +void terminal_clear();
     +void print_player_info(PlayerManager& player_manager);
     +void render_map(Playground& playground, PlayerManager& player_manager);
     +void print_menu(Menu& menu);

     +void print_level(int level);

     +void defeat_end(int level);
     +void victory_end(int level);
 }

left to right direction

@enduml